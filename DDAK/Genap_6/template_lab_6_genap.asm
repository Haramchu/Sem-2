;====================================================================
; Processor		: ATmega8515
; Compiler		: AVRASM
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================

.include "m8515def.inc"
.def temp = r16
.def led_data = r17
.def counter_kecepatan = r21
.def counter_lane = r20

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

.org $00
rjmp MAIN
.org $01 ; 1 poin
rjmp GANTI_LANE
.org $02  ; 1 poin
rjmp GANTI_KECEPATAN

;====================================================================
; CODE SEGMENT
;====================================================================

MAIN:

INIT_STACK:
	ldi temp, low(RAMEND)
	out SPL, temp
	ldi temp, high(RAMEND)
	out SPH, temp

INIT_LED:
	ser temp 			;load $FF to temp
	;set output PortA dan B
	out DDRA, temp 	
	out DDRB, temp 		

INIT_INTERRUPT:
	ldi temp,0b00001111	;init interrupt MCUCR
	out MCUCR,temp
	ldi temp,0b11000000	;init interrupt GICR
	out GICR,temp
	sei

LED_VIP_LANE:
	ldi temp,0b00000000 	;Turn off all LEDS on other lane
	out PORTB, temp 		;Turn off all LEDS on other lane
	rcall DELAY

	ldi led_data,0b11000000 ;set 2 LED paling bawah
	out PORTA, led_data 	;UPDATE LEDS
	rcall DELAY

	ldi led_data,0b00110000 ;set 2 LED selanjutnya
	out PORTA, led_data		;UPDATE LEDS
	rcall DELAY

	ldi led_data,0b00001100 ;set 2 LED selanjutnya
	out PORTA, led_data	 	;UPDATE LEDS
	rcall DELAY

	ldi led_data,0b00000011 ;set 2 LED paling atas
	out PORTA, led_data 	;UPDATE LEDS
	rcall DELAY

	cpi counter_lane, 1
	breq LED_REGULAR_LANE
	rjmp LED_VIP_LANE

LED_REGULAR_LANE:
	ldi temp,0b00000000 	;Turn off all LEDS on other lane
	out PORTA, temp 		;Turn off all LEDS on other lane
	rcall DELAY

	ldi led_data,0b10000000	;set 1 LED paling bawah
	out PORTB, led_data 	;UPDATE LEDS
	rcall DELAY

	ldi led_data,0b01000000 ;set 1 LED selanjutnya
	out PORTB, led_data 	;UPDATE LEDS
	rcall DELAY

	ldi led_data,0b00100000 ;set 1 LED selanjutnya
	out PORTB, led_data 	;UPDATE LEDS
	rcall DELAY

	ldi led_data,0b00010000 ;set 1 LED selanjutnya
	out PORTB, led_data 	;UPDATE LEDS
	rcall DELAY

	ldi led_data,0b00001000 ;set 1 LED selanjutnya
	out PORTB, led_data 	;UPDATE LEDS
	rcall DELAY

	ldi led_data,0b00000100 ;set 1 LED selanjutnya
	out PORTB, led_data 	;UPDATE LEDS
	rcall DELAY

	ldi led_data,0b00000010 ;set 1 LED selanjutnya
	out PORTB, led_data 	;UPDATE LEDS
	rcall DELAY

	ldi led_data,0b00000001 ;set 1 LED terakhir
	out PORTB, led_data 	;UPDATE LEDS
	rcall DELAY


	cpi counter_lane, 0
	breq LED_VIP_LANE
	rjmp LED_REGULAR_LANE


; Soal
DELAY:
	cpi counter_kecepatan,0
	breq DELAY_02
	cpi counter_kecepatan,1
	breq DELAY_01
	ret
    
; Soal
GANTI_LANE:
	;interrupt button lane
	cpi counter_lane, 1
	breq RESET_LANE
	brne CHANGE_LANE

; Soal
GANTI_KECEPATAN:
	;interrupt button kecepatan
	cpi counter_kecepatan, 1
	breq RESET_KECEPATAN
	brne CHANGE_KECEPATAN

RESET_LANE:
	ldi counter_lane, 0
	reti

CHANGE_LANE:
	inc counter_lane
	reti

RESET_KECEPATAN:
	ldi counter_kecepatan,0
	reti

CHANGE_KECEPATAN:
	inc counter_kecepatan
	reti

DELAY_01:
; Generated by delay loop calculator
; at http://www.bretmulvey.com/avrdelay.html
;
; DELAY_CONTROL 40 000 cycles
; 5ms at 8.0 MHz

	ldi  r18, 52
	ldi  r19, 242
	
L1: 
	dec  r19
	brne L1
	dec  r18
	brne L1
	nop
	ret

DELAY_02:
; Generated by delay loop calculator
; at http://www.bretmulvey.com/avrdelay.html
;
; Delay 160 000 cycles
; 20ms at 8.0 MHz

	ldi  r18, 208
	ldi  r19, 202


L2: 
	dec  r19
	brne L2
	dec  r18
	brne L2
	nop
	ret
